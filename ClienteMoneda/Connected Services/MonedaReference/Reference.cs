//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClienteMoneda.MonedaReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Moneda", Namespace="http://schemas.datacontract.org/2004/07/Modelo")]
    [System.SerializableAttribute()]
    public partial class Moneda : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentificadorMonedaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdentificadorMoneda {
            get {
                return this.IdentificadorMonedaField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentificadorMonedaField, value) != true)) {
                    this.IdentificadorMonedaField = value;
                    this.RaisePropertyChanged("IdentificadorMoneda");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FactorConversion", Namespace="http://schemas.datacontract.org/2004/07/Modelo")]
    [System.SerializableAttribute()]
    public partial class FactorConversion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdMonedaDestinoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdMonedaOrigenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Factor {
            get {
                return this.FactorField;
            }
            set {
                if ((this.FactorField.Equals(value) != true)) {
                    this.FactorField = value;
                    this.RaisePropertyChanged("Factor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdMonedaDestino {
            get {
                return this.IdMonedaDestinoField;
            }
            set {
                if ((this.IdMonedaDestinoField.Equals(value) != true)) {
                    this.IdMonedaDestinoField = value;
                    this.RaisePropertyChanged("IdMonedaDestino");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdMonedaOrigen {
            get {
                return this.IdMonedaOrigenField;
            }
            set {
                if ((this.IdMonedaOrigenField.Equals(value) != true)) {
                    this.IdMonedaOrigenField = value;
                    this.RaisePropertyChanged("IdMonedaOrigen");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Pais", Namespace="http://schemas.datacontract.org/2004/07/Modelo")]
    [System.SerializableAttribute()]
    public partial class Pais : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Historial", Namespace="http://schemas.datacontract.org/2004/07/Modelo")]
    [System.SerializableAttribute()]
    public partial class Historial : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CantidadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdDestinoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdOrigenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdUsuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ResultadoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Cantidad {
            get {
                return this.CantidadField;
            }
            set {
                if ((this.CantidadField.Equals(value) != true)) {
                    this.CantidadField = value;
                    this.RaisePropertyChanged("Cantidad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Factor {
            get {
                return this.FactorField;
            }
            set {
                if ((this.FactorField.Equals(value) != true)) {
                    this.FactorField = value;
                    this.RaisePropertyChanged("Factor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Fecha {
            get {
                return this.FechaField;
            }
            set {
                if ((this.FechaField.Equals(value) != true)) {
                    this.FechaField = value;
                    this.RaisePropertyChanged("Fecha");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdDestino {
            get {
                return this.IdDestinoField;
            }
            set {
                if ((object.ReferenceEquals(this.IdDestinoField, value) != true)) {
                    this.IdDestinoField = value;
                    this.RaisePropertyChanged("IdDestino");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdOrigen {
            get {
                return this.IdOrigenField;
            }
            set {
                if ((object.ReferenceEquals(this.IdOrigenField, value) != true)) {
                    this.IdOrigenField = value;
                    this.RaisePropertyChanged("IdOrigen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdUsuario {
            get {
                return this.IdUsuarioField;
            }
            set {
                if ((this.IdUsuarioField.Equals(value) != true)) {
                    this.IdUsuarioField = value;
                    this.RaisePropertyChanged("IdUsuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Resultado {
            get {
                return this.ResultadoField;
            }
            set {
                if ((this.ResultadoField.Equals(value) != true)) {
                    this.ResultadoField = value;
                    this.RaisePropertyChanged("Resultado");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Usuario", Namespace="http://schemas.datacontract.org/2004/07/Modelo")]
    [System.SerializableAttribute()]
    public partial class Usuario : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaNacimientoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdPaisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreCompletoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreUsuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaNacimiento {
            get {
                return this.FechaNacimientoField;
            }
            set {
                if ((this.FechaNacimientoField.Equals(value) != true)) {
                    this.FechaNacimientoField = value;
                    this.RaisePropertyChanged("FechaNacimiento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPais {
            get {
                return this.IdPaisField;
            }
            set {
                if ((this.IdPaisField.Equals(value) != true)) {
                    this.IdPaisField = value;
                    this.RaisePropertyChanged("IdPais");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreCompleto {
            get {
                return this.NombreCompletoField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreCompletoField, value) != true)) {
                    this.NombreCompletoField = value;
                    this.RaisePropertyChanged("NombreCompleto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreUsuario {
            get {
                return this.NombreUsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreUsuarioField, value) != true)) {
                    this.NombreUsuarioField = value;
                    this.RaisePropertyChanged("NombreUsuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MonedaReference.IMonedaService")]
    public interface IMonedaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/GetMonedas", ReplyAction="http://tempuri.org/IMonedaService/GetMonedasResponse")]
        System.Collections.Generic.List<ClienteMoneda.MonedaReference.Moneda> GetMonedas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/GetMonedas", ReplyAction="http://tempuri.org/IMonedaService/GetMonedasResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ClienteMoneda.MonedaReference.Moneda>> GetMonedasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/GetMoneda", ReplyAction="http://tempuri.org/IMonedaService/GetMonedaResponse")]
        ClienteMoneda.MonedaReference.Moneda GetMoneda(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/GetMoneda", ReplyAction="http://tempuri.org/IMonedaService/GetMonedaResponse")]
        System.Threading.Tasks.Task<ClienteMoneda.MonedaReference.Moneda> GetMonedaAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/CreateMoneda", ReplyAction="http://tempuri.org/IMonedaService/CreateMonedaResponse")]
        void CreateMoneda(ClienteMoneda.MonedaReference.Moneda moneda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/CreateMoneda", ReplyAction="http://tempuri.org/IMonedaService/CreateMonedaResponse")]
        System.Threading.Tasks.Task CreateMonedaAsync(ClienteMoneda.MonedaReference.Moneda moneda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/UpdateMoneda", ReplyAction="http://tempuri.org/IMonedaService/UpdateMonedaResponse")]
        void UpdateMoneda(ClienteMoneda.MonedaReference.Moneda moneda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/UpdateMoneda", ReplyAction="http://tempuri.org/IMonedaService/UpdateMonedaResponse")]
        System.Threading.Tasks.Task UpdateMonedaAsync(ClienteMoneda.MonedaReference.Moneda moneda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/DeleteMoneda", ReplyAction="http://tempuri.org/IMonedaService/DeleteMonedaResponse")]
        void DeleteMoneda(ClienteMoneda.MonedaReference.Moneda moneda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/DeleteMoneda", ReplyAction="http://tempuri.org/IMonedaService/DeleteMonedaResponse")]
        System.Threading.Tasks.Task DeleteMonedaAsync(ClienteMoneda.MonedaReference.Moneda moneda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/GetConversiones", ReplyAction="http://tempuri.org/IMonedaService/GetConversionesResponse")]
        System.Collections.Generic.List<ClienteMoneda.MonedaReference.FactorConversion> GetConversiones();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/GetConversiones", ReplyAction="http://tempuri.org/IMonedaService/GetConversionesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ClienteMoneda.MonedaReference.FactorConversion>> GetConversionesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/GetConversion", ReplyAction="http://tempuri.org/IMonedaService/GetConversionResponse")]
        ClienteMoneda.MonedaReference.FactorConversion GetConversion(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/GetConversion", ReplyAction="http://tempuri.org/IMonedaService/GetConversionResponse")]
        System.Threading.Tasks.Task<ClienteMoneda.MonedaReference.FactorConversion> GetConversionAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/CreateFactor", ReplyAction="http://tempuri.org/IMonedaService/CreateFactorResponse")]
        void CreateFactor(ClienteMoneda.MonedaReference.FactorConversion factor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/CreateFactor", ReplyAction="http://tempuri.org/IMonedaService/CreateFactorResponse")]
        System.Threading.Tasks.Task CreateFactorAsync(ClienteMoneda.MonedaReference.FactorConversion factor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/UpdateFactor", ReplyAction="http://tempuri.org/IMonedaService/UpdateFactorResponse")]
        void UpdateFactor(ClienteMoneda.MonedaReference.FactorConversion factor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/UpdateFactor", ReplyAction="http://tempuri.org/IMonedaService/UpdateFactorResponse")]
        System.Threading.Tasks.Task UpdateFactorAsync(ClienteMoneda.MonedaReference.FactorConversion factor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/DeleteFactor", ReplyAction="http://tempuri.org/IMonedaService/DeleteFactorResponse")]
        void DeleteFactor(ClienteMoneda.MonedaReference.FactorConversion factor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/DeleteFactor", ReplyAction="http://tempuri.org/IMonedaService/DeleteFactorResponse")]
        System.Threading.Tasks.Task DeleteFactorAsync(ClienteMoneda.MonedaReference.FactorConversion factor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/GetPaises", ReplyAction="http://tempuri.org/IMonedaService/GetPaisesResponse")]
        System.Collections.Generic.List<ClienteMoneda.MonedaReference.Pais> GetPaises();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/GetPaises", ReplyAction="http://tempuri.org/IMonedaService/GetPaisesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ClienteMoneda.MonedaReference.Pais>> GetPaisesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/GetPais", ReplyAction="http://tempuri.org/IMonedaService/GetPaisResponse")]
        ClienteMoneda.MonedaReference.Pais GetPais(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/GetPais", ReplyAction="http://tempuri.org/IMonedaService/GetPaisResponse")]
        System.Threading.Tasks.Task<ClienteMoneda.MonedaReference.Pais> GetPaisAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/CreatePais", ReplyAction="http://tempuri.org/IMonedaService/CreatePaisResponse")]
        void CreatePais(ClienteMoneda.MonedaReference.Pais pais);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/CreatePais", ReplyAction="http://tempuri.org/IMonedaService/CreatePaisResponse")]
        System.Threading.Tasks.Task CreatePaisAsync(ClienteMoneda.MonedaReference.Pais pais);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/UpdatePais", ReplyAction="http://tempuri.org/IMonedaService/UpdatePaisResponse")]
        void UpdatePais(ClienteMoneda.MonedaReference.Pais pais);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/UpdatePais", ReplyAction="http://tempuri.org/IMonedaService/UpdatePaisResponse")]
        System.Threading.Tasks.Task UpdatePaisAsync(ClienteMoneda.MonedaReference.Pais pais);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/DeletePais", ReplyAction="http://tempuri.org/IMonedaService/DeletePaisResponse")]
        void DeletePais(ClienteMoneda.MonedaReference.Pais pais);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/DeletePais", ReplyAction="http://tempuri.org/IMonedaService/DeletePaisResponse")]
        System.Threading.Tasks.Task DeletePaisAsync(ClienteMoneda.MonedaReference.Pais pais);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/GetHistoriales", ReplyAction="http://tempuri.org/IMonedaService/GetHistorialesResponse")]
        System.Collections.Generic.List<ClienteMoneda.MonedaReference.Historial> GetHistoriales();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/GetHistoriales", ReplyAction="http://tempuri.org/IMonedaService/GetHistorialesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ClienteMoneda.MonedaReference.Historial>> GetHistorialesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/GetHistorial", ReplyAction="http://tempuri.org/IMonedaService/GetHistorialResponse")]
        ClienteMoneda.MonedaReference.Historial GetHistorial(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/GetHistorial", ReplyAction="http://tempuri.org/IMonedaService/GetHistorialResponse")]
        System.Threading.Tasks.Task<ClienteMoneda.MonedaReference.Historial> GetHistorialAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/CreateHistorial", ReplyAction="http://tempuri.org/IMonedaService/CreateHistorialResponse")]
        void CreateHistorial(ClienteMoneda.MonedaReference.Historial historial);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/CreateHistorial", ReplyAction="http://tempuri.org/IMonedaService/CreateHistorialResponse")]
        System.Threading.Tasks.Task CreateHistorialAsync(ClienteMoneda.MonedaReference.Historial historial);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/UpdateHistorial", ReplyAction="http://tempuri.org/IMonedaService/UpdateHistorialResponse")]
        void UpdateHistorial(ClienteMoneda.MonedaReference.Historial historial);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/UpdateHistorial", ReplyAction="http://tempuri.org/IMonedaService/UpdateHistorialResponse")]
        System.Threading.Tasks.Task UpdateHistorialAsync(ClienteMoneda.MonedaReference.Historial historial);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/DeleteHistorial", ReplyAction="http://tempuri.org/IMonedaService/DeleteHistorialResponse")]
        void DeleteHistorial(ClienteMoneda.MonedaReference.Historial historial);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/DeleteHistorial", ReplyAction="http://tempuri.org/IMonedaService/DeleteHistorialResponse")]
        System.Threading.Tasks.Task DeleteHistorialAsync(ClienteMoneda.MonedaReference.Historial historial);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/GetUsuarios", ReplyAction="http://tempuri.org/IMonedaService/GetUsuariosResponse")]
        System.Collections.Generic.List<ClienteMoneda.MonedaReference.Usuario> GetUsuarios();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/GetUsuarios", ReplyAction="http://tempuri.org/IMonedaService/GetUsuariosResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ClienteMoneda.MonedaReference.Usuario>> GetUsuariosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/GetUsuarioByEmail", ReplyAction="http://tempuri.org/IMonedaService/GetUsuarioByEmailResponse")]
        ClienteMoneda.MonedaReference.Usuario GetUsuarioByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/GetUsuarioByEmail", ReplyAction="http://tempuri.org/IMonedaService/GetUsuarioByEmailResponse")]
        System.Threading.Tasks.Task<ClienteMoneda.MonedaReference.Usuario> GetUsuarioByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/GetUsuario", ReplyAction="http://tempuri.org/IMonedaService/GetUsuarioResponse")]
        ClienteMoneda.MonedaReference.Usuario GetUsuario(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/GetUsuario", ReplyAction="http://tempuri.org/IMonedaService/GetUsuarioResponse")]
        System.Threading.Tasks.Task<ClienteMoneda.MonedaReference.Usuario> GetUsuarioAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/CreateUsuario", ReplyAction="http://tempuri.org/IMonedaService/CreateUsuarioResponse")]
        void CreateUsuario(ClienteMoneda.MonedaReference.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/CreateUsuario", ReplyAction="http://tempuri.org/IMonedaService/CreateUsuarioResponse")]
        System.Threading.Tasks.Task CreateUsuarioAsync(ClienteMoneda.MonedaReference.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/UpdateUsuario", ReplyAction="http://tempuri.org/IMonedaService/UpdateUsuarioResponse")]
        void UpdateUsuario(ClienteMoneda.MonedaReference.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/UpdateUsuario", ReplyAction="http://tempuri.org/IMonedaService/UpdateUsuarioResponse")]
        System.Threading.Tasks.Task UpdateUsuarioAsync(ClienteMoneda.MonedaReference.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/DeleteUsuario", ReplyAction="http://tempuri.org/IMonedaService/DeleteUsuarioResponse")]
        void DeleteUsuario(ClienteMoneda.MonedaReference.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonedaService/DeleteUsuario", ReplyAction="http://tempuri.org/IMonedaService/DeleteUsuarioResponse")]
        System.Threading.Tasks.Task DeleteUsuarioAsync(ClienteMoneda.MonedaReference.Usuario usuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMonedaServiceChannel : ClienteMoneda.MonedaReference.IMonedaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MonedaServiceClient : System.ServiceModel.ClientBase<ClienteMoneda.MonedaReference.IMonedaService>, ClienteMoneda.MonedaReference.IMonedaService {
        
        public MonedaServiceClient() {
        }
        
        public MonedaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MonedaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MonedaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MonedaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<ClienteMoneda.MonedaReference.Moneda> GetMonedas() {
            return base.Channel.GetMonedas();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ClienteMoneda.MonedaReference.Moneda>> GetMonedasAsync() {
            return base.Channel.GetMonedasAsync();
        }
        
        public ClienteMoneda.MonedaReference.Moneda GetMoneda(int id) {
            return base.Channel.GetMoneda(id);
        }
        
        public System.Threading.Tasks.Task<ClienteMoneda.MonedaReference.Moneda> GetMonedaAsync(int id) {
            return base.Channel.GetMonedaAsync(id);
        }
        
        public void CreateMoneda(ClienteMoneda.MonedaReference.Moneda moneda) {
            base.Channel.CreateMoneda(moneda);
        }
        
        public System.Threading.Tasks.Task CreateMonedaAsync(ClienteMoneda.MonedaReference.Moneda moneda) {
            return base.Channel.CreateMonedaAsync(moneda);
        }
        
        public void UpdateMoneda(ClienteMoneda.MonedaReference.Moneda moneda) {
            base.Channel.UpdateMoneda(moneda);
        }
        
        public System.Threading.Tasks.Task UpdateMonedaAsync(ClienteMoneda.MonedaReference.Moneda moneda) {
            return base.Channel.UpdateMonedaAsync(moneda);
        }
        
        public void DeleteMoneda(ClienteMoneda.MonedaReference.Moneda moneda) {
            base.Channel.DeleteMoneda(moneda);
        }
        
        public System.Threading.Tasks.Task DeleteMonedaAsync(ClienteMoneda.MonedaReference.Moneda moneda) {
            return base.Channel.DeleteMonedaAsync(moneda);
        }
        
        public System.Collections.Generic.List<ClienteMoneda.MonedaReference.FactorConversion> GetConversiones() {
            return base.Channel.GetConversiones();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ClienteMoneda.MonedaReference.FactorConversion>> GetConversionesAsync() {
            return base.Channel.GetConversionesAsync();
        }
        
        public ClienteMoneda.MonedaReference.FactorConversion GetConversion(int id) {
            return base.Channel.GetConversion(id);
        }
        
        public System.Threading.Tasks.Task<ClienteMoneda.MonedaReference.FactorConversion> GetConversionAsync(int id) {
            return base.Channel.GetConversionAsync(id);
        }
        
        public void CreateFactor(ClienteMoneda.MonedaReference.FactorConversion factor) {
            base.Channel.CreateFactor(factor);
        }
        
        public System.Threading.Tasks.Task CreateFactorAsync(ClienteMoneda.MonedaReference.FactorConversion factor) {
            return base.Channel.CreateFactorAsync(factor);
        }
        
        public void UpdateFactor(ClienteMoneda.MonedaReference.FactorConversion factor) {
            base.Channel.UpdateFactor(factor);
        }
        
        public System.Threading.Tasks.Task UpdateFactorAsync(ClienteMoneda.MonedaReference.FactorConversion factor) {
            return base.Channel.UpdateFactorAsync(factor);
        }
        
        public void DeleteFactor(ClienteMoneda.MonedaReference.FactorConversion factor) {
            base.Channel.DeleteFactor(factor);
        }
        
        public System.Threading.Tasks.Task DeleteFactorAsync(ClienteMoneda.MonedaReference.FactorConversion factor) {
            return base.Channel.DeleteFactorAsync(factor);
        }
        
        public System.Collections.Generic.List<ClienteMoneda.MonedaReference.Pais> GetPaises() {
            return base.Channel.GetPaises();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ClienteMoneda.MonedaReference.Pais>> GetPaisesAsync() {
            return base.Channel.GetPaisesAsync();
        }
        
        public ClienteMoneda.MonedaReference.Pais GetPais(int id) {
            return base.Channel.GetPais(id);
        }
        
        public System.Threading.Tasks.Task<ClienteMoneda.MonedaReference.Pais> GetPaisAsync(int id) {
            return base.Channel.GetPaisAsync(id);
        }
        
        public void CreatePais(ClienteMoneda.MonedaReference.Pais pais) {
            base.Channel.CreatePais(pais);
        }
        
        public System.Threading.Tasks.Task CreatePaisAsync(ClienteMoneda.MonedaReference.Pais pais) {
            return base.Channel.CreatePaisAsync(pais);
        }
        
        public void UpdatePais(ClienteMoneda.MonedaReference.Pais pais) {
            base.Channel.UpdatePais(pais);
        }
        
        public System.Threading.Tasks.Task UpdatePaisAsync(ClienteMoneda.MonedaReference.Pais pais) {
            return base.Channel.UpdatePaisAsync(pais);
        }
        
        public void DeletePais(ClienteMoneda.MonedaReference.Pais pais) {
            base.Channel.DeletePais(pais);
        }
        
        public System.Threading.Tasks.Task DeletePaisAsync(ClienteMoneda.MonedaReference.Pais pais) {
            return base.Channel.DeletePaisAsync(pais);
        }
        
        public System.Collections.Generic.List<ClienteMoneda.MonedaReference.Historial> GetHistoriales() {
            return base.Channel.GetHistoriales();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ClienteMoneda.MonedaReference.Historial>> GetHistorialesAsync() {
            return base.Channel.GetHistorialesAsync();
        }
        
        public ClienteMoneda.MonedaReference.Historial GetHistorial(int id) {
            return base.Channel.GetHistorial(id);
        }
        
        public System.Threading.Tasks.Task<ClienteMoneda.MonedaReference.Historial> GetHistorialAsync(int id) {
            return base.Channel.GetHistorialAsync(id);
        }
        
        public void CreateHistorial(ClienteMoneda.MonedaReference.Historial historial) {
            base.Channel.CreateHistorial(historial);
        }
        
        public System.Threading.Tasks.Task CreateHistorialAsync(ClienteMoneda.MonedaReference.Historial historial) {
            return base.Channel.CreateHistorialAsync(historial);
        }
        
        public void UpdateHistorial(ClienteMoneda.MonedaReference.Historial historial) {
            base.Channel.UpdateHistorial(historial);
        }
        
        public System.Threading.Tasks.Task UpdateHistorialAsync(ClienteMoneda.MonedaReference.Historial historial) {
            return base.Channel.UpdateHistorialAsync(historial);
        }
        
        public void DeleteHistorial(ClienteMoneda.MonedaReference.Historial historial) {
            base.Channel.DeleteHistorial(historial);
        }
        
        public System.Threading.Tasks.Task DeleteHistorialAsync(ClienteMoneda.MonedaReference.Historial historial) {
            return base.Channel.DeleteHistorialAsync(historial);
        }
        
        public System.Collections.Generic.List<ClienteMoneda.MonedaReference.Usuario> GetUsuarios() {
            return base.Channel.GetUsuarios();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ClienteMoneda.MonedaReference.Usuario>> GetUsuariosAsync() {
            return base.Channel.GetUsuariosAsync();
        }
        
        public ClienteMoneda.MonedaReference.Usuario GetUsuarioByEmail(string email) {
            return base.Channel.GetUsuarioByEmail(email);
        }
        
        public System.Threading.Tasks.Task<ClienteMoneda.MonedaReference.Usuario> GetUsuarioByEmailAsync(string email) {
            return base.Channel.GetUsuarioByEmailAsync(email);
        }
        
        public ClienteMoneda.MonedaReference.Usuario GetUsuario(int id) {
            return base.Channel.GetUsuario(id);
        }
        
        public System.Threading.Tasks.Task<ClienteMoneda.MonedaReference.Usuario> GetUsuarioAsync(int id) {
            return base.Channel.GetUsuarioAsync(id);
        }
        
        public void CreateUsuario(ClienteMoneda.MonedaReference.Usuario usuario) {
            base.Channel.CreateUsuario(usuario);
        }
        
        public System.Threading.Tasks.Task CreateUsuarioAsync(ClienteMoneda.MonedaReference.Usuario usuario) {
            return base.Channel.CreateUsuarioAsync(usuario);
        }
        
        public void UpdateUsuario(ClienteMoneda.MonedaReference.Usuario usuario) {
            base.Channel.UpdateUsuario(usuario);
        }
        
        public System.Threading.Tasks.Task UpdateUsuarioAsync(ClienteMoneda.MonedaReference.Usuario usuario) {
            return base.Channel.UpdateUsuarioAsync(usuario);
        }
        
        public void DeleteUsuario(ClienteMoneda.MonedaReference.Usuario usuario) {
            base.Channel.DeleteUsuario(usuario);
        }
        
        public System.Threading.Tasks.Task DeleteUsuarioAsync(ClienteMoneda.MonedaReference.Usuario usuario) {
            return base.Channel.DeleteUsuarioAsync(usuario);
        }
    }
}
